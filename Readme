 1 - Summary

This is a very small Android application which aims to store GPS
locations on the SDCARD. This application uses a "smart" and
customizable policy to be as power efficient as possible without any
hardware facilities.

 2 - Input:

- minimum frequency ("min_freq" in minutes, default is 3)
- maximum frequency ("max_freq" in minutes, default is 30)
- distance tolerance ("min_dist" in meters, default is 100)
- GPS fix timeout (in seconds, default is 120)

 3 - Output:

Output data files are stored in /sdcard/SmartGPSLog/ (one file by day):

- /sdcard/SmartGPSLog/2012:05:15.gps
- /sdcard/SmartGPSLog/[...]
- /sdcard/SmartGPSLog/current.gps

No binary but ASCII data files.

 4 - Behavior - Policy

On each wake-up, the application tries to get the current position and
program its next wake-up as follow:

- if getting the current position failed, the next wake-up is
  programmed twice the current frequency majored by the "maximum"
  frequency.

- if the new position is close to the last one (distance tolerance),
  the next wake-up is programmed twice the current frequency majored
  by the maximum frequency.

- if the new position is far away to the last one (distance
  tolerance), the next wake-up is programmed the current frequency
  divided by four and minored by the minimum frequency.

Once the SmartGPSLogger application is installed, the SmartGPSLogger
service is automatically started on phone boot.

 5 - Documentation

http://developer.android.com/guide/topics/location/obtaining-user-location.html
http://developer.android.com/reference/android/location/LocationManager.html addNmeaListener
http://www.jjoe64.com/2011/06/autostart-service-on-device-boot.html

 6 - Build

$ ./mkproj.sh
$ ant debug install

